#!/bin/bash
#
# run the renderer according to the name of the local machine
# or that of the first argument if provided

MACHINE=`uname`

# infer wall name from hostname
case `hostname` in
	[a-d][1-4])
		WALL=WILD
	;;
	Michels-Mac-mini.local)
		WALL=macmini
	;;
	*)
		WALL=local
	;;
esac

# if there are arguments, check if first one is wall name
if [ $# -ge 1 ]; then
	case $1 in
		-*)
			break
		;;
		*)
			WALL=$1
			shift
		;;
	esac
fi

# configure according to wall
declare -a tiles
declare -a env
env=()
case $WALL in
	WILD)
		DIR=~/WildOS/renderer
		NWAPP=nw
		NW=nw
		env=(DISPLAY=:0.0 DISPLAY=:0.1)
		tiles=(L R)
	;;
	macmini)
		DIR=/Users/mbl/WildOS/renderer
		NWAPP=node-webkit
		NW=nw
		#tiles=(LL LR RL RR)
		tiles=(Left Right)
	;;
	local)
		cd ../renderer
		NWAPP=node-webkit
		NW=nw
		tiles=(TL TR BL BR)
	;;
	*)
		echo "Unknown wall: $WALL. Exiting."
		exit 1
	;;
esac

# clean up
case $WALL in
	local)
		# avoid killall node-webkit on local machine as it will kill the server too!
		if [ $MACHINE == 'Linux' ]; then 
			ps aux | fgrep /nw | fgrep -v server | fgrep -v -- --type= | awk '{print $2}' | xargs kill || true
		else
			# Mac OS X
			kill `ps -e | grep WildOS/renderer | grep -v Helper | awk '{print $1}'` || true
		fi
	;;
	*)
		killall $NWAPP
	;;
esac

# run tile renderers
for (( i = 0; i < ${#tiles[@]}; i++ )); do
	sleep 1
	eval ${env[$i]} $NW $DIR $* -i ${tiles[$i]} &
done
