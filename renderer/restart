#!/bin/bash
#
# run the renderer according to the name of the local machine
# or that of the first argument if provided

# infer wall name or get it from argument
if [ $# -eq 0 ]; then
	case `hostname` in
		[a-d][1-4])
			WALL=WILD
		;;
		Michels-Mac-mini.local)
			WALL=macmini
		;;
		*)
			WALL=local
		;;
	esac
else
	WALL=$1
fi

# configure according to wall
declare -a tiles
declare -a env
env=()
case $WALL in
	WILD)
		DIR=~/WildOS/renderer
		NWAPP=nw
		NW=nw
		env=(DISPLAY=:0.0 DISPLAY=:0.1)
		tiles=(L R)
	;;
	macmini)
		DIR=/Users/mbl/WildOS/renderer
		NWAPP=node-webkit
		NW=nw
		#tiles=(LL LR RL RR)
		tiles=(Left Right)
	;;
	local)
		cd ../renderer
		NWAPP=node-webkit
		NW=nw
		tiles=(TL TR BL BR)
	;;
	*)
		echo "Unknown wall: $WALL. Exiting."
		exit 1
	;;
esac

# clean up
case $WALL in
	local)
		# avoid killall node-webkit on local machine as it will kill the server too!
		# (this has only be tested on Mac OS)
		kill `ps -e | grep WildOS/renderer | grep -v Helper | awk '{print $1}'`
	;;
	*)
		killall $NWAPP
	;;
esac

# run tile renderers
for (( i = 0; i < ${#tiles[@]}; i++ )); do
	sleep 1
	eval WALL=$WALL ${env[$i]} $NW $DIR ${tiles[$i]} &
done
