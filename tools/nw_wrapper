#!/bin/sh
#
# Run node-webkit from the command line on a Mac or Linux.
# Use the local nwjs if there is one in the package's node_modules,
# otherwise run the global nwjs
#
# If the first argument is -X, run the executable directly,
# which is useful to see error messages.

# location of nwjs app on MacOS:
NWAPP=/Applications/nwjs.app
# alternative if you have multiple versions in a directory:
#VERSION=0.22.0
#NWDIR=/Users/mbl/Dev/Tools/Web\ browsers/Node-WebKit
#NWAPP=$NWDIR/nwjs-sdk-v$VERSION-osx-x64/nwjs.app
NW=nw

# if the first argument is -X, run (instead of open) the app on Mac (ignore -X on Linux)
# (useful, e.g. to catch errors that occur at startup)
if [ $# -ge 1 -a "$1" = "-X" ]
then
        shift
        echo "running in direct mode"
        DIRECT=1
fi

# if there are arguments, look at the first one.
# if it is a directory and dir/package.json exist, execute as is
# if not, or if there is no argument, prepend `pwd` to the arguments
if [ $# -ge 1 -a -d "$1" -a -f "$1/package.json" ]
then
        cd $1
        PACKAGE=`pwd`
        shift
else
        PACKAGE=`pwd`
fi

# see if we have an npm-installed nwjs package
NWJS=$PACKAGE/node_modules/nw/nwjs

if [ -d "$NWJS" ]; then
        # for Mac
        NWAPP=$NWJS/nwjs.app
        # for Linux
        NW=$NWJS/nw
fi

# finally, run nwjs !
if [ -r "$NWAPP" ]; then
        # on a Mac: open the app, unless we are in direct mode, in which case we run the binary directly
        if [ -z "$DIRECT" ]; then
                open -n "$NWAPP" --args "$PACKAGE" $*
        else
                "$NWAPP/Contents/MacOS/nwjs" "$PACKAGE" $*
        fi
else
        # on Linux: run nw
        "$NW" "$PACKAGE" $*
fi                
